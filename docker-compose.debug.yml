# for updates and superuser setup, please use:
 # docker-compose run python migrate
# docker-compose run

version: "3.4"
services:

  mqtt:
    ports:
      - "127.0.0.1:8082:80" # with nginx SSL reverse proxy

  db:
    ports:
      - "127.0.0.1:5432:5432"

  python:
    ports: [ ]
    # - "127.0.0.1:8000:8000"
    environment:
      ACTIVATE_DEBUG_MODE:

  opa:
    ports:
      - "127.0.0.1:8181:8181"
    environment:
      OPA_DEBUG_MODE: 'unauthenticated'

  # This is necessary since volumes are only writable as root by default, but opa runs as 1000:1000.
  opa-client-prototype-change-volume-uid:
    image: ubuntu
    command: "bash -c 'set -eux ; chown -R 1000:1000 /var/opa'"
    volumes:
      - opa-client-prototype-persistence:/var/opa/
  # An OPA client configured similar to how it could run on an rpi.
  opa-client-prototype:
    # TODO =basic
    # TODO --authentication=token
    #command: run --server --addr :8181 --authentication=token --authorization=basic -c /data/config.yaml /data/policy
    command: run --server --addr :8181 -c /data/config.yaml /data/policy
    environment:
      OPA_BEARER_TOKEN: '${OPA_BEARER_TOKEN}'
      OPA_DEBUG_MODE: 'unauthenticated'
      OPA_BUNDLE_SERVER_BEARER_TOKEN:
    image: "openpolicyagent/opa:latest"
    depends_on:
      - opa-client-prototype-change-volume-uid
    #  - python
    #networks:
    #  - opa
    ports: # []
      - "127.0.0.1:8182:8181"
    volumes:
      - ./opa-client-prototype/:/data/:ro
      - opa-client-prototype-persistence:/var/opa/
    extra_hosts:
      - "host.docker.internal:host-gateway"

  test:
    image: ubuntu



  nginx:
    ports:
      - "127.0.0.1:8080:80"

volumes:
  opa-client-prototype-persistence: